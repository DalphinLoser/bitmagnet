version: '3.8'
# This is a full-featured example for running bitmagnet through a gluetun VPN connection with Grafana/Prometheus observability services.
# See https://bitmagnet.io/setup/installation.html for a minimal docker-compose example.

services:
  bitmagnet:
    container_name: bitmagnet
    image: ghcr.io/bitmagnet-io/bitmagnet:latest
    volumes:
      # Mount data folder (currently only used for logs when file rotation is enabled):
      - ./data/bitmagnet:/root/.local/share/bitmagnet
    restart: unless-stopped
    environment:
      # Enable logging to rotating files for ingest to Loki:
      LOG_FILE_ROTATOR_ENABLED: ${LOG_ROTATOR_ENABLED:-true}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      TMDB_API_KEY: ${TMDB_API_KEY}
    network_mode: service:gluetun
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - worker
      - run
      # Run all workers:
      - --all
      # Or enable individual workers:
      # - --keys=http_server
      # - --keys=queue_server
      # - --keys=dht_crawler

  gluetun:
    container_name: bitmagnet-gluetun
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    ports:
      # The bitmagnet ports must be exposed by the gluetun container:
      - "${BITMAGNET_PORT:-3333}:3333"
      # BitTorrent ports:
      - "${BT_PORT:-3334}:3334/tcp"
      - "${BT_PORT_UDP:-3334}:3334/udp"
    environment:
      # Put your personal gluetun/VPN account config and credentials here:
      # (See https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers)
      VPN_SERVICE_PROVIDER: ${VPN_PROVIDER:-provider}
      OPENVPN_USER: ${OVPN_USER:-user}
      OPENVPN_PASSWORD: ${OVPN_PASSWORD:-password}
    restart: always
    # Host names must be manually mapped here for bitmagnet to resolve them:
    extra_hosts:
      - "postgres:${POSTGRES_IP:-192.168.55.11}"
    networks:
      bitmagnet:
        ipv4_address: ${GLUETUN_IP:-192.168.55.10}

  postgres:
    image: postgres:16-alpine
    container_name: bitmagnet-postgres
    volumes:
      - ${POSTGRES_DATA_PATH:-./data/postgres}:/var/lib/postgresql/data
    networks:
      bitmagnet:
        ipv4_address: ${POSTGRES_IP:-192.168.55.11}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    shm_size: 1g
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-bitmagnet}
      PGUSER: ${PGUSER:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      start_period: 20s

  grafana:
    container_name: bitmagnet-grafana
    image: grafana/grafana:latest
    environment:
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    volumes:
      - ./data/grafana:/var/lib/grafana
      # Provisioned data sources and dashboards:
      - ./observability/grafana.datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./observability/grafana.dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./observability/grafana-dashboards:/etc/dashboards
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - bitmagnet

  grafana-agent:
    container_name: bitmagnet-grafana-agent
    image: grafana/agent:latest
    volumes:
      - ./data/bitmagnet/logs:/var/log/bitmagnet
      # Mount the logs and metrics scraping configurations:
      - ./observability/grafana-agent.config.river:/etc/agent-config/config.river
    command:
      - run
      - /etc/agent-config/config.river
      - --server.http.listen-addr=0.0.0.0:12345
    environment:
      HOSTNAME: grafana-agent
      AGENT_MODE: flow
      LOKI_HOST: ${LOKI_HOST:-loki:3100}
      POSTGRES_HOST: $"{POSTGRES_HOST:-postgres}:5432"
      REDIS_HOST: ${REDIS_HOST:-redis:6379}
    ports:
      - "${GRAFANA_AGENT_PORT:-12345}:12345"
    depends_on:
      - gluetun
      - loki
    networks:
      - bitmagnet

  prometheus:
    container_name: bitmagnet-prometheus
    image: prom/prometheus:latest
    volumes:
      - ./data/prometheus:/prometheus
      - ./observability/prometheus.config.yaml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - bitmagnet
    restart: unless-stopped
    extra_hosts:
      - "bitmagnet:${BITMAGNET_IP:-192.168.55.10}"

  loki:
    container_name: bitmagnet-loki
    image: grafana/loki:latest
    volumes:
      - ./data/loki:/loki
      - ./observability/loki.config.yaml:/etc/loki/local-config.yaml
    command:
      - "-config.file=/etc/loki/local-config.yaml"
    ports:
      - "${LOKI_PORT:-3100}:3100"
    networks:
      - bitmagnet
    restart: unless-stopped

  pyroscope:
    container_name: bitmagnet-pyroscope
    image: pyroscope/pyroscope:latest
    command:
      - "server"
      - "--config=/etc/pyroscope/server.yaml"
    volumes:
      - ./observability/pyroscope.config.yaml:/etc/pyroscope/server.yaml
      - ./data/pyroscope:/var/lib/pyroscope
    ports:
      - "${PYROSCOPE_PORT:-4040}:4040"
    networks:
      - bitmagnet
    restart: unless-stopped

  postgres-exporter:
    container_name: bitmagnet-postgres-exporter
    image: prometheuscommunity/postgres-exporter:latest
    environment:
      DATA_SOURCE_NAME: "postgresql://${PGUSER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "${POSTGRES_EXPORTER_PORT:-9187}:9187"
    networks:
      - bitmagnet
    restart: unless-stopped

networks:
  bitmagnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.55.0/24
          gateway: 192.168.55.1
